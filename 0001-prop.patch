From ac6523e779b6ecb2139b43959f9028a53750d6e2 Mon Sep 17 00:00:00 2001
From: pelle <pelle@pelle.io>
Date: Thu, 15 Jan 2015 19:07:56 +0100
Subject: [PATCH] prop

---
 .../gwt/modules/property/PropertyModuleUI.java     | 56 ++++++++++++++++++++++
 .../modules/property/PropertyModuleUIFactory.java  | 44 +++++++++++++++++
 .../web/modules/property/PropertyModule.java       | 46 ++++++++++++++++++
 .../modules/property/PropertyModuleFactory.java    | 38 +++++++++++++++
 mango-model/src/mango.mango                        |  7 +++
 5 files changed, 191 insertions(+)
 create mode 100644 mango-client-gwt/src/io/pelle/mango/client/gwt/modules/property/PropertyModuleUI.java
 create mode 100644 mango-client-gwt/src/io/pelle/mango/client/gwt/modules/property/PropertyModuleUIFactory.java
 create mode 100644 mango-client-web/src/io/pelle/mango/client/web/modules/property/PropertyModule.java
 create mode 100644 mango-client-web/src/io/pelle/mango/client/web/modules/property/PropertyModuleFactory.java

diff --git a/mango-client-gwt/src/io/pelle/mango/client/gwt/modules/property/PropertyModuleUI.java b/mango-client-gwt/src/io/pelle/mango/client/gwt/modules/property/PropertyModuleUI.java
new file mode 100644
index 0000000..f6fc111
--- /dev/null
+++ b/mango-client-gwt/src/io/pelle/mango/client/gwt/modules/property/PropertyModuleUI.java
@@ -0,0 +1,56 @@
+/**
+ * Copyright (c) 2013 Christian Pelster.
+ * 
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ * 
+ * Contributors:
+ *     Christian Pelster - initial API and implementation
+ */
+package io.pelle.mango.client.gwt.modules.property;
+
+import io.pelle.mango.client.gwt.modules.dictionary.BaseGwtModuleUI;
+import io.pelle.mango.client.web.modules.property.PropertyModule;
+
+import java.util.logging.Logger;
+
+import com.google.gwt.user.client.ui.HTML;
+import com.google.gwt.user.client.ui.Panel;
+import com.google.gwt.user.client.ui.VerticalPanel;
+
+/**
+ * UI for the navigation module
+ * 
+ * @author pelle
+ * 
+ */
+public class PropertyModuleUI extends BaseGwtModuleUI<PropertyModule> {
+
+	final static Logger LOG = Logger.getLogger("PropertyModuleUI");
+
+	private HTML title;
+
+	private VerticalPanel panel;
+
+	/**
+	 * @param module
+	 */
+	public PropertyModuleUI(PropertyModule module) {
+		super(module, PropertyModule.UI_MODULE_ID);
+
+	}
+
+	/** {@inheritDoc} */
+	@Override
+	public Panel getContainer() {
+		return panel;
+	}
+
+	@Override
+	public String getTitle() {
+		return getModule().getTitle();
+	}
+
+}
diff --git a/mango-client-gwt/src/io/pelle/mango/client/gwt/modules/property/PropertyModuleUIFactory.java b/mango-client-gwt/src/io/pelle/mango/client/gwt/modules/property/PropertyModuleUIFactory.java
new file mode 100644
index 0000000..e6c3427
--- /dev/null
+++ b/mango-client-gwt/src/io/pelle/mango/client/gwt/modules/property/PropertyModuleUIFactory.java
@@ -0,0 +1,44 @@
+/**
+ * Copyright (c) 2013 Christian Pelster.
+ * 
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ * 
+ * Contributors:
+ *     Christian Pelster - initial API and implementation
+ */
+package io.pelle.mango.client.gwt.modules.property;
+
+import io.pelle.mango.client.base.layout.IModuleUI;
+import io.pelle.mango.client.base.module.IModule;
+import io.pelle.mango.client.base.module.ModuleUtils;
+import io.pelle.mango.client.gwt.modules.IGwtModuleUI;
+import io.pelle.mango.client.web.module.BaseModuleUIFactory;
+import io.pelle.mango.client.web.module.ModuleHandler;
+import io.pelle.mango.client.web.modules.property.PropertyModule;
+import io.pelle.mango.client.web.util.BaseErrorAsyncCallback;
+
+import java.util.Map;
+
+import com.google.common.base.Optional;
+import com.google.gwt.user.client.rpc.AsyncCallback;
+import com.google.gwt.user.client.ui.Panel;
+
+public class PropertyModuleUIFactory extends BaseModuleUIFactory<Panel, IGwtModuleUI<PropertyModule>> {
+
+	public PropertyModuleUIFactory() {
+		super(new String[] { PropertyModule.UI_MODULE_ID });
+	}
+
+	@Override
+	public void getNewInstance(final String moduleUrl, final AsyncCallback<IGwtModuleUI<PropertyModule>> moduleCallback, Map<String, Object> parameters, Optional<IModuleUI<?, ?>> previousModuleUI) {
+		ModuleHandler.getInstance().startModule(ModuleUtils.concatenate(moduleUrl, PropertyModule.MODULE_LOCATOR), parameters, new BaseErrorAsyncCallback<IModule>() {
+			@Override
+			public void onSuccess(IModule result) {
+				moduleCallback.onSuccess(new PropertyModuleUI((PropertyModule) result));
+			}
+		});
+	}
+}
diff --git a/mango-client-web/src/io/pelle/mango/client/web/modules/property/PropertyModule.java b/mango-client-web/src/io/pelle/mango/client/web/modules/property/PropertyModule.java
new file mode 100644
index 0000000..5a27f28
--- /dev/null
+++ b/mango-client-web/src/io/pelle/mango/client/web/modules/property/PropertyModule.java
@@ -0,0 +1,46 @@
+/**
+ * Copyright (c) 2013 Christian Pelster.
+ * 
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ * 
+ * Contributors:
+ *     Christian Pelster - initial API and implementation
+ */
+package io.pelle.mango.client.web.modules.property;
+
+import io.pelle.mango.client.base.module.IModule;
+import io.pelle.mango.client.base.module.ModuleUtils;
+import io.pelle.mango.client.property.BasePropertyModule;
+import io.pelle.mango.client.web.MangoClientWeb;
+
+import java.util.Map;
+
+import com.google.gwt.user.client.rpc.AsyncCallback;
+
+public class PropertyModule extends BasePropertyModule {
+
+	public final static String MODULE_LOCATOR = ModuleUtils.getBaseModuleUrl(MODULE_ID);
+
+	public final static String UI_MODULE_ID = MODULE_ID;
+
+	public final static String UI_MODULE_LOCATOR = ModuleUtils.getBaseUIModuleUrl(UI_MODULE_ID);
+
+	public PropertyModule(String moduleUrl, AsyncCallback<IModule> moduleCallback, Map<String, Object> parameters) {
+		super(moduleUrl, moduleCallback, parameters);
+		getModuleCallback().onSuccess(this);
+	}
+
+	@Override
+	public String getTitle() {
+		return MangoClientWeb.MESSAGES.logTitle();
+	}
+
+	@Override
+	public boolean isInstanceOf(String moduleUrl) {
+		return MODULE_ID.equals(ModuleUtils.getModuleId(moduleUrl));
+	}
+
+}
diff --git a/mango-client-web/src/io/pelle/mango/client/web/modules/property/PropertyModuleFactory.java b/mango-client-web/src/io/pelle/mango/client/web/modules/property/PropertyModuleFactory.java
new file mode 100644
index 0000000..c547ef1
--- /dev/null
+++ b/mango-client-web/src/io/pelle/mango/client/web/modules/property/PropertyModuleFactory.java
@@ -0,0 +1,38 @@
+/**
+ * Copyright (c) 2013 Christian Pelster.
+ * 
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ * 
+ * Contributors:
+ *     Christian Pelster - initial API and implementation
+ */
+package io.pelle.mango.client.web.modules.property;
+
+import io.pelle.mango.client.base.module.IModule;
+import io.pelle.mango.client.base.module.ModuleUtils;
+import io.pelle.mango.client.web.module.BaseModuleFactory;
+
+import java.util.Map;
+
+import com.google.gwt.user.client.rpc.AsyncCallback;
+
+public class PropertyModuleFactory extends BaseModuleFactory
+{
+
+	/** {@inheritDoc} */
+	@Override
+	public void getNewInstance(String moduleUrl, AsyncCallback<IModule> moduleCallback, Map<String, Object> parameters)
+	{
+		new PropertyModule(moduleUrl, moduleCallback, parameters);
+	}
+
+	@Override
+	public boolean supports(String moduleUrl)
+	{
+		return ModuleUtils.urlContainsModuleId(moduleUrl, PropertyModule.MODULE_ID);
+	}
+
+}
diff --git a/mango-model/src/mango.mango b/mango-model/src/mango.mango
index 05a041f..8d5e6de 100644
--- a/mango-model/src/mango.mango
+++ b/mango-model/src/mango.mango
@@ -31,6 +31,13 @@ project Mango {
 			}
 		}
 
+		package property {
+			moduledefinition Property {
+				parameters {
+				}
+			}
+		}
+		
 		package log {
 		
 			moduledefinition Log {
-- 
2.1.0

