/**
 * generated by Xtext
 */
package io.pelle.mango.dsl.generator.server.service;

import com.google.common.collect.Iterables;
import com.google.inject.Inject;
import io.pelle.mango.dsl.generator.server.ServerNameUtils;
import io.pelle.mango.dsl.mango.Model;
import io.pelle.mango.dsl.mango.Service;
import org.eclipse.emf.common.util.TreeIterator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.xbase.lib.Extension;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;

@SuppressWarnings("all")
public class GWTServices {
  @Inject
  @Extension
  private ServerNameUtils _serverNameUtils;
  
  public CharSequence gwtRemoteServicesApplicationContext(final Model model) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("<beans xmlns=\"http://www.springframework.org/schema/beans\"");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p=\"http://www.springframework.org/schema/p\"");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("xmlns:context=\"http://www.springframework.org/schema/context\"");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\">");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<bean id=\"gwtUrlMapping\" class=\"org.gwtwidgets.server.spring.GWTHandler\">");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<property name=\"order\" value=\"10\"/>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<property name=\"mappings\">");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<map>");
    _builder.newLine();
    {
      TreeIterator<EObject> _eAllContents = model.eAllContents();
      Iterable<EObject> _iterable = IteratorExtensions.<EObject>toIterable(_eAllContents);
      Iterable<Service> _filter = Iterables.<Service>filter(_iterable, Service.class);
      for(final Service service : _filter) {
        _builder.append("\t\t\t\t");
        _builder.append("<entry key=\"/rpc/");
        String _serviceSpringName = this._serverNameUtils.serviceSpringName(service);
        _builder.append(_serviceSpringName, "\t\t\t\t");
        _builder.append("\" value-ref=\"");
        String _serviceSpringName_1 = this._serverNameUtils.serviceSpringName(service);
        _builder.append(_serviceSpringName_1, "\t\t\t\t");
        _builder.append("\" />");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t\t");
    _builder.append("</map>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</property>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</bean>");
    _builder.newLine();
    _builder.append("</beans>");
    _builder.newLine();
    return _builder;
  }
}
