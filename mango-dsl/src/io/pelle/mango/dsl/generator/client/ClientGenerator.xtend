/*
 * generated by Xtext
 */
package io.pelle.mango.dsl.generator.client

import com.google.inject.Inject
import io.pelle.mango.dsl.generator.GeneratorConstants
import io.pelle.mango.dsl.generator.client.dictionary.DictionaryGenerator
import io.pelle.mango.dsl.generator.client.dictionary.DictionaryNavigationGenerator
import io.pelle.mango.dsl.generator.client.web.GWTClient
import io.pelle.mango.dsl.generator.client.web.GWTServices
import io.pelle.mango.dsl.generator.client.web.Services
import io.pelle.mango.dsl.mango.Entity
import io.pelle.mango.dsl.mango.Enumeration
import io.pelle.mango.dsl.mango.Model
import io.pelle.mango.dsl.mango.ModuleDefinition
import io.pelle.mango.dsl.mango.Service
import io.pelle.mango.dsl.mango.ValueObject
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator

class ClientGenerator implements IGenerator {

	@Inject 
	extension GWTServices

	@Inject 
	extension GWTClient

	@Inject 
	extension DictionaryGenerator

	@Inject 
	extension VOGenerator

	@Inject 
	extension Services

	@Inject 
	extension ClientNameUtils

	@Inject 
	extension ModuleGenerator
	
	@Inject
	extension DictionaryNavigationGenerator

	override void doGenerate(Resource resource, IFileSystemAccess fsa) {

		for (model : resource.allContents.toIterable.filter(Model)) {
			fsa.generateFile(model.gwtRemoteServiceLocatorFullQualifiedFileName, GeneratorConstants.VO_GEN_OUTPUT, model.gwtRemoteServiceLocator)
			fsa.generateFile(model.gwtRemoteServiceLocatorInterfaceFullQualifiedFileName, GeneratorConstants.VO_GEN_OUTPUT, model.gwtRemoteServiceLocatorInterface)
			fsa.generateFile(model.gwtClientModuleFullQualifiedFileName, GeneratorConstants.VO_GEN_OUTPUT, model.gwtClientModule)
			fsa.generateFile(model.gwtClientconfigurationFullQualifiedNameFileName, GeneratorConstants.VO_GEN_OUTPUT, model.gwtClientConfiguration)
			model.dictionaryGenerator(fsa)
			model.dictionaryNavigationGenerator(fsa)
		}

		for (moduleDefinition : resource.allContents.toIterable.filter(ModuleDefinition)) {
			fsa.generateFile(moduleDefinition.baseModuleDefinitionFullQualifiedFileName, GeneratorConstants.VO_GEN_OUTPUT, moduleDefinition.compileBaseModuleDefinition)
		}

		for (entity : resource.allContents.toIterable.filter(Entity)) {
			fsa.generateFile(entity.voFullQualifiedFileName, GeneratorConstants.VO_GEN_OUTPUT, entity.compileVO)
		}

		for (valueObject : resource.allContents.toIterable.filter(ValueObject)) {
			fsa.generateFile(valueObject.voFullQualifiedFileName, GeneratorConstants.VO_GEN_OUTPUT, valueObject.compileValueObject)
		}
		
		for (enumeration : resource.allContents.toIterable.filter(Enumeration)) {
			fsa.generateFile(enumeration.enumerationFullQualifiedFileName, GeneratorConstants.VO_GEN_OUTPUT, enumeration.compileEnumeration)
		}
		
		for (service : resource.allContents.toIterable.filter(Service)) {
			fsa.generateFile(service.gwtAsyncServiceInterfaceFullQualifiedFileName, GeneratorConstants.VO_GEN_OUTPUT, service.gwtAsyncServiceInterface)
			fsa.generateFile(service.gwtServiceInterfaceFullQualifiedFileName, GeneratorConstants.VO_GEN_OUTPUT, service.gwtServiceInterface)
			fsa.generateFile(service.serviceInterfaceFullQualifiedFileName, GeneratorConstants.VO_GEN_OUTPUT, service.serviceInterface)
		}
		
	}

}
