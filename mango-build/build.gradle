buildscript {
	
	repositories {

		mavenCentral()
		
		maven {
			name "localMavenRepository"
			url System.properties['user.home'] + "/.m2/repository"
		}

		ivy {
			name "snapshotLocalRepository"
			url System.properties['user.home'] + "/.gradle/mango_snapshot"
			layout "maven"
		}
	
	}

	dependencies {
		classpath group: 'org.xtext', name: 'xtext-gradle-plugin', version: '0.0.2'
		classpath group: 'io.pelle.mango', name: 'mango-gradle-plugin', version: '+'
	}
}

ext {
	repositoryDir = project.buildDir.absolutePath + "/repository"
	buildTimeStamp = getBuildTimeStamp()
	isReleaseVersion = false
	
	versions = [
		spring: "4.0.3.RELEASE",
		spring_security: "3.2.4.RELEASE",
		gwt: "2.6.1",
		guava: "17.0"
	]
}

def getBuildTimeStamp() {
	def date = new Date()
	def formattedDate = date.format('yyyyMMddHHmmss')
	return formattedDate
}

gradle.taskGraph.whenReady { taskGraph ->
	
	if (taskGraph.hasTask(':uploadArchives')) {
		isReleaseVersion = true
	} else {
		isReleaseVersion = false
	}
	
	if (!versionQualifier)
	{
		versionQualifier = buildTimeStamp
	}

	version = version + "-" + versionQualifier
	
	println "version set to $version"
}

allprojects {

	apply plugin: 'eclipse'
	
	apply from: '../mango-build/mangojavacommon.gradle'
	
	javadoc.enabled = false
	javadocJar.enabled = false
	
	sourceSets {
		main {
			java { srcDirs = ["src"] }
			resources { srcDirs = ["src"] }
		}
		test {
			java { srcDirs = ["test"] }
			resources { srcDirs = ["test"] }
		}
	}
	
	eclipse {
		pathVariables 'GRADLE_USER_HOME': gradle.gradleUserHomeDir
	}

	dependencies {
		compile group: 'log4j', name: 'log4j', version: '1.2.17'
		testCompile group: 'junit', name: 'junit', version: '4.11'
	}

}

