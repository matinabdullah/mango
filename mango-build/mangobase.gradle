ext.isReleaseVersion = false

apply plugin: 'maven'
apply plugin: 'signing'

repositories {
	
	mavenCentral()
	
	ivy {
		name "localDevelopmentRepository"
		url System.properties['user.home'] + "/.gradle/mango_repository"
		layout "maven"
	}
	
	maven {
		name "localMavenRepository"
		url System.properties['user.home'] + "/.m2/repository"
	}
}

signing {
	required { 
		isReleaseVersion && gradle.taskGraph.hasTask(":uploadArchives")
	}
	
	sign configurations.archives
}

uploadArchives {
	repositories { 
		add project.repositories.localDevelopmentRepository
	}
}

uploadSnapshotLocal {
	repositories { 
		add project.repositories.localDevelopmentRepository
	}
}

uploadArchives {
	
	repositories {
		
		mavenDeployer {
			
			beforeDeployment { MavenDeployment deployment ->
				signing.signPom(deployment)
			}

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			pom.project {
				name 'mango'
				packaging 'jar'
				// optionally artifactId can be defined here
				description 'mango web framework'
				url 'http://pellepelster.github.io/mango/'

				scm {
					connection 'scm:git:git@github.com:pellepelster/mango.git'
					developerConnection 'scm:git:git@github.com:pellepelster/mango.git'
					url 'https://github.com/pellepelster/mango'
				}

				licenses {
					license {
						name 'The Apache Software License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}

				developers {
					developer {
						id 'pelle'
						name 'Pelle Pelster'
						email 'pelle@pelle.io'
					}
				}
			}
		}
	}
}
